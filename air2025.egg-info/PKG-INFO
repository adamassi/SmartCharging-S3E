Metadata-Version: 2.4
Name: air2025
Version: 0.0.0
Summary: AIR 2024
Author-email: Shiran Dapht <shiran96@campus.technion.ac.il>, Sarah Keren <sarahk@technion.ac.il>
Project-URL: Repository, https://github.com/CLAIR-LAB-TECHNION/AIR_robots_sim.git
Keywords: MuJoCo,UR5E,3D
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: Python :: 3.10
Requires-Python: >=3.10
Description-Content-Type: text/markdown
Requires-Dist: numpy==1.26.4
Requires-Dist: opencv-python==4.10.0.82
Requires-Dist: pycurl==7.45.4
Requires-Dist: PyOpenGL==3.1.7
Requires-Dist: PyQt5==5.15.10
Requires-Dist: PyQt5-Qt5==5.15.2
Requires-Dist: PyQt5-sip==12.13.0
Requires-Dist: pyrealsense2==2.55.1.6486
Requires-Dist: ur-rtde==1.5.8
Requires-Dist: chime==0.7.0
Requires-Dist: mujoco==3.2.2
Requires-Dist: gymnasium==0.29.1
Requires-Dist: dm_control==1.0.22
Requires-Dist: pyYAML==6.0.1
Requires-Dist: imageio==2.34.2
Requires-Dist: frozendict==2.4.4
Requires-Dist: Klampt==0.9.1.post4
Requires-Dist: typer==0.12.3
Requires-Dist: matplotlib==3.9.2
Requires-Dist: matplotlib-inline==0.1.7
Dynamic: requires-python

# Temporary Simulation Environment

This repository contains a temporary simulation environment for testing and developing robot control algorithms using the UR5e robot model in a MuJoCo physics simulation.

## Overview

The simulation environment provides a simplified setup for:
- UR5e robot arm simulation
- Basic pick and place operations
- Motion planning and execution
- Block manipulation tasks

## Prerequisites

- Python 3.10 or 3.11
- MuJoCo physics engine
- Required Python packages (see `requirements.txt`)

## Clone the repository:

```bash
git clone https://github.com/CLAIR-LAB-TECHNION/AIR_robots_sim.git
cd AIR_robots_sim
```
## to run :
1
py -3.10 -m venv venv
2
.\venv\Scripts\Activate
3
python setup.py

python sim_testing.py




python stam3.py


python convert.py




## Key Components

### SimEnv Class
- Main simulation environment
- Handles physics simulation
- Manages robot and object states

### MotionExecutor Class
- Executes robot movements
- Provides high-level movement commands
- Handles pick and place operations

## Common Issues and Solutions

1. **Robot Out of Workspace**
   - Ensure target positions are within workspace limits
   - Check z-height for pick and place operations

2. **Motion Planning Failures**
   - Verify start and goal positions are valid
   - Check for obstacles in the path
////
